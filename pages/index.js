import { useState, useEffect } from "react";
import { Box, Button, Flex, FormControl, FormLabel, Input, Table, Tbody, Td, Th, Thead, Tr, VStack, useToast} from "@chakra-ui/react";
import Header from "../components/Header";
import api from "../connection/api";
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

export default function Home() {
  const [name, setName] = useState("");
  const [auteur, setAuteur] = useState("");
  const [id, setID] = useState(null);
  const [livres, setLivres] = useState([]);
  const [isFormOpen, setIsFormOpen] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const toast = useToast();

  const isValidFormData = () => {
    if(!name){
      return toast ({
        title: "Remplir le champ nom livre",
        status: "error",
        duration: 9000,
        isClosable: true,
      });
    }

    if (!auteur){
      return toast ({
        title: "Remplir le champ nom auteur",
        status: "error",
        duration: 9000,
        isClosable: true,
      });
    }

    if(livres.some((livre)=> livre.name == name && livre._id == id))
    return toast ({
      title: "Livre déja enregistrer",
      status: "error",
      duration: 9000,
      isClosable: true,
    });
  };

  const handleSubmitCreateClient = async (e) => {
    e.preventDefault();
    if(isValidFormData()) return;
    
    try {
      setIsLoading(true);
      const {data} = await api.post ("/livres",{name,auteur});
      setLivres(livre.concat(data.data));
      setName("");
      setAuteur("");
      setIsLoading(false);
     return toast ({
        title: "Livre enregistré avec succes",
        status: "success",
        duration: 9000,
        isClosable: true,
      });
      
    } catch (error) {
      console.log(error);
      setIsLoading(false);
    }
  }

  useEffect(()=>{
    
      api.get("/livres").then(({data})=>{
        setLivres(data.data)
      });  
  }, [livres]);
  return (
    <div className={styles.container}>
      <Head>
        <title>SenLibrairie</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="img.jpg" />
      </Head>
      <Box>
        <Header/>
        <Flex align="center" justifyContent="center">
          <Box width={800} 
          borderwidth={1} 
          borderRadius={8} 
          boxShadow="lg" 
          p={20} 
          mt="25">

          <Flex justifyContent="flex-end">
            <Button colorScheme="green">Voir</Button>
          </Flex>  


          <VStack as="form" onSubmit={handleSubmitCreateClient}>
            <FormControl>
              <FormLabel>Nom</FormLabel>
              <Input type="text" 
              placeholder="Entrez le nom du livre" 
              value={name} 
              onChange={(e)=>setName(e.target.value)} />
            </FormControl>

            <FormControl>
              <FormLabel>Auteur</FormLabel>
              <Input type="text" 
              placeholder="Entrez l'auteur du livre"
               value={auteur} 
               onChange={(e)=>setAuteur(e.target.value)}/>
            </FormControl>
            <Button colorScheme="green" type="submit" mt={6} isLoading={isLoading}>
              Ajouter livre
            </Button>
          </VStack>
          <Table variant="simple" mt={6}>
            <Thead bg="teal.500">
              <Tr>
                <Th textColor="white">Nom Livre</Th>
                <Th textColor="white">Auteur</Th>
                <Th textColor="white">Action </Th>
              </Tr>
            </Thead>
            <Tbody>
              {
                livres.map((livre, index) => (
                <Tr key={index}>
                <Td>{livre.name}</Td>
                <Td>{livre.auteur}</Td>
                <Td justifyContent="space-between">
                  <Flex>
                    <Button size="sm" fontSize="small" colorScheme="green" mr="2">Editer</Button>
                    <Button size="sm" fontSize="small" colorScheme="red" mr="2">Supprimer</Button>
                  </Flex>
                </Td>

              </Tr>

                ))
              }
              
            </Tbody>
          </Table>
        </Box>
        </Flex>
      </Box>
    </div>
      
    
  )
}
